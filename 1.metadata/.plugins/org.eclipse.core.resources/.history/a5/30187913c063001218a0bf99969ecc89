package de.bergwild.android.mobile.service;

import java.io.File;

import android.content.Intent;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Binder;
import android.os.Bundle;
import android.os.IBinder;
import de.bergwild.android.mobile.tools.Out;
import de.bergwild.android.mobile.topomap.UTMTool;
import de.bergwild.android.util.FileUtil;
import de.bergwild.android.util.component.Feedback;
import de.bergwild.android.util.task.BasisService;
import de.bw.mm.topo.MP;
import de.bw.mm.topo.MTrack;

public class GPSService extends BasisService {

	private static final long intervallMs = 3000;

	public static String TAG_TRACKFILEPATH = "filepath";
	public static String TAG_TRACKNAME = "trackname";
	public static String TAG_NUMBEROFPOINTS = "numberpoints";
	public static String TAG_LOCATION = "location";

	public static String ACTION_BROADCAST = "de.android.buddycom.InputMessageService.BROADCAST";
	private LocListener locListener = new LocListener();
	private LocationManager manager;
	private final IBinder mBinder = new LocalBinder();
	// private String filepath = "";
	private String trackname = "";

	private boolean trackingOn = true;
	private MTrack track;
	private File trackFile;

	/**
	 * Wenn die Activity erneut sichtbar wird und dadurch den Service nochmal bindet, dann wird hier onCreate() nicht
	 * wiederholt aufgerufen. Wohl aber die Methode onServiceConnected() in der Activity
	 **/
	@Override
	public void onCreate() {
		super.onCreate();
		Out.s("### GPSService onCreate: " + trackname);
		manager = (LocationManager) getSystemService(LOCATION_SERVICE);
		manager.requestLocationUpdates(LocationManager.GPS_PROVIDER, intervallMs, 0, locListener);
	}

	@Override
	public void onDestroy() {
		super.onDestroy();
		Out.s("### GPSService onDestroy: " + trackname);
		manager.removeUpdates(locListener);
	}

	@Override
	public IBinder onBind(Intent intent) {
		trackname = intent.getExtras().getString(TAG_TRACKNAME);
		String filepath = intent.getExtras().getString(TAG_TRACKFILEPATH);

		if (filepath != null && filepath.length() > 0)
			trackFile = new File(filepath);

		Out.s("### GPSService onBind: " + trackname);

		buildAndGetFTrackFile();

		return mBinder;
	}

	private void buildAndGetFTrackFile() {
		track = null;

		if (trackFile != null && trackFile.exists()) {
			track = loadTrack();
		} else {
			track = new MTrack();
			track.setName(trackname);
			saveTrack();
		}

		if (track == null)
			Feedback.longToast(this, "Fehler beim erzeugen der Trackdatei");
	}

	private MTrack loadTrack() {
		return (MTrack) FileUtil.loadObject(trackFile.getParent(), trackFile.getName());

	}

	private void saveTrack() {
		FileUtil.saveObject(track, trackFile.getParent(), trackFile.getName());
	}

	public class LocalBinder extends Binder {
		public GPSService getService() {
			return GPSService.this;
		}
	}

	public String getFilepath() {
		if (trackFile != null)
			return trackFile.getAbsolutePath();
		return "Kein Track geöffnet";
	}

	public String getTrackname() {
		return trackname;
	}

	public int getPoints() {

		if (track == null)
			return -1;

		return track.getPoints().size();
	}

	public boolean isTrackingOn() {
		return trackingOn;
	}

	public void setTrackingOn(boolean trackingOn) {
		this.trackingOn = trackingOn;
	}

	class LocListener implements LocationListener {

		@Override
		public void onLocationChanged(Location location) {
			if (location != null) {
				MP point = UTMTool.toPoint(location);
				if (point != null) {
					if (track != null && trackFile != null) {
						track.getPoints().add(point);
						saveTrack();
					}
					sendBroadcast(location);
				}
			}
		}

		@Override
		public void onProviderDisabled(String provider) {
		}

		@Override
		public void onProviderEnabled(String provider) {
		}

		@Override
		public void onStatusChanged(String provider, int status, Bundle extras) {
		}

	}

	public void sendBroadcast(Location location) {
		final Intent broadcastIntent = new Intent(ACTION_BROADCAST);
		broadcastIntent.putExtra(TAG_TRACKNAME, trackname);
		broadcastIntent.putExtra(TAG_NUMBEROFPOINTS, track.getPoints().size());
		broadcastIntent.putExtra(TAG_LOCATION, location);
		getApplicationContext().sendBroadcast(broadcastIntent);

	}

}
